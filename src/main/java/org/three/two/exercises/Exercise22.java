package org.three.two.exercises;

/**
 * 3.2.22 请证明：若一棵二叉查找树中的一个结点有两个子结点，那么它的后继结点不会有左子结点，
 * 前趋结点不会有右子结点。
 *
 * @author cheng
 *         2018/2/26 20:23
 */
public class Exercise22 {
    /*
     *
     * 这题首先要清楚查找二叉树的线性顺序是由中序遍历得到的
     *
     * 中序遍历访问结点过程中，若访问顺序是 A B C
     * 那么 A 叫做 B 的直接前继，C 叫做 B 的直接后继
     *
     * 通过中序遍历的访问结点顺序来想，某个 A 结点的直接后继是不会有左子结点的
     * 如果有左子结点，那证明该结点还不是 A 的直接后继
     *
     * 同样，如果某个 A 结点有两个子结点，那么他的直接前继就在以他左子结点为树根的子树中
     * 如果该直接前继有右子结点，那证明他还不是 A 的直接前继
     *
     */
}
